apiVersion: apps/v1
kind: Deployment
metadata:
  name: osm-metrics-agent
  namespace: {{ .Release.Namespace }}
  labels:
    app: osm-metrics-agent
    {{- include "osm.arcLabels" . | nindent 4 }}
  annotations:
    # this will ensure pods are rolled in next helm upgrade if cert files are updated.
    {{- if .Values.Azure.proxySettings.isProxyEnabled }}
    checksum/arc-proxy-config: {{ include (print $.Template.BasePath "/arc-proxy.yaml") . | sha256sum }}
    {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: osm-metrics-agent
  template:
    metadata:
      labels:
        app: osm-metrics-agent
        {{- include "osm.arcLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ .Release.Name }}
      containers:
        - name: mdm
          image: {{ .Values.metrics.mdm.image.repository }}:{{ .Values.metrics.mdm.image.tag }}
          imagePullPolicy: {{ .Values.metrics.mdm.image.pullPolicy }}
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
            limits:
              cpu: 50m
              memory: 100Mi
          env:
            - name: ROLEINSTANCE
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CONFIG_OVERRIDES_FILE
              value: /tmp/geneva_mdm/mdmconfig.json
            - name: METRIC_ENDPOINT
              value: {{ .Values.metrics.mdm.metricEndpoint }}
            - name: MDM_INPUT
              value: statsd_udp,statsd_tcp
            - name: MDM_LOG_LEVEL
              value: "Info"
            - name: ME_AZURE_ENV
              value: {{ .Values.metrics.mdm.environment }}
          volumeMounts:
            - name: mdm-config
              mountPath: /tmp/geneva_mdm
        - name: msi-adapter
          image: {{ .Values.metrics.msiAdapter.image.repository }}:{{ .Values.metrics.msiAdapter.image.tag }}
          imagePullPolicy: {{ .Values.metrics.msiAdapter.image.pullPolicy }}
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
            limits:
              cpu: 50m
              memory: 100Mi
          env:
            - name: TOKEN_NAMESPACE
              value: {{ .Release.Namespace }}
            - name: EXTENSION_ARMID
              value: {{ .Values.Azure.Extension.ResourceId }}
            - name: EXTENSION_NAME
              value: {{ .Values.Azure.Extension.Name }}
            - name: CLUSTER_TYPE
              value: ConnectedClusters
            - name: CLUSTER_IDENTITY
              value: "false"
            - name: MANAGED_IDENTITY_AUTH
              value: "true"
            - name: TEST_MODE
              value: "false"
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
        - name: prom-mdm-converter
          image: {{ .Values.metrics.promMdmConverter.image.repository }}:{{ .Values.metrics.promMdmConverter.image.tag }}
          imagePullPolicy: {{ .Values.metrics.promMdmConverter.image.pullPolicy }}
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
            limits:
              cpu: 50m
              memory: 100Mi
          env:
            - name: SERVER_PORT
              value: "{{ .Values.metrics.telegraf.prometheusRemoteWritePort }}"
            - name: GENEVA_DEFAULT_MDM_NAMESPACE
              value: osm-control-plane-metrics
            - name: GENEVA_ACCOUNT_NAME
              value: {{ .Values.metrics.mdm.accountName }}
            - name: EXTENSION_RESOURCE_ID
              value: {{ .Values.Azure.Extension.ResourceId }}
        - name: telegraf
          image: {{ .Values.metrics.telegraf.image.repository }}:{{ .Values.metrics.telegraf.image.tag }}
          imagePullPolicy: {{ .Values.metrics.telegraf.image.pullPolicy }}
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
            limits:
              cpu: 50m
              memory: 100Mi
          {{- if .Values.Azure.proxySettings.isProxyEnabled }}
          envFrom:
            - secretRef:
                name: arc-proxy-config
          {{- end }}
          volumeMounts:
            - name: telegraf-conf
              mountPath: /etc/telegraf/telegraf.conf
              subPath: telegraf.conf
            {{- if  and .Values.Azure.proxySettings.isProxyEnabled .Values.Azure.proxySettings.proxyCert }}
            - mountPath: /etc/ssl/certs/proxy-cert.crt
              subPath: proxy-cert.crt
              name: proxy-certstore
            {{- end }}
      volumes:
        - name: mdm-config
          configMap:
            name: osm-mdm-config
        - name: telegraf-conf
          configMap:
            name: osm-telegraf-config
        {{- if  and .Values.Azure.proxySettings.isProxyEnabled .Values.Azure.proxySettings.proxyCert }}
        - name: proxy-certstore
          secret:
            secretName: arc-proxy-cert
        {{- end }}