# 
# The job in this YAML file verifies if the current k8s distribution has been tested for osm-arc. 
# The job is executed in helm pre-install phase of OSM release lifecycle. 
#
apiVersion: v1
kind: ServiceAccount
metadata:
  name: validate-single-mesh-account
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook-weight": "5"
    "helm.sh/hook": pre-install
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: validate-single-mesh-role
  annotations:
    "helm.sh/hook-weight": "10"
    "helm.sh/hook": pre-install
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
rules:
- apiGroups: ["apps"]
  resources: ["namespaces", "pods", "deployments"]
  verbs: ["get", "list"]
{{- if eq .Values.Azure.Cluster.Distribution "openshift" }}
- apiGroups:
  - security.openshift.io
  resourceNames:
    - anyuid
  resources:
    - securitycontextconstraints
  verbs:
    - use
{{- end }}
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: validate-single-mesh-role-binding
  annotations:
    "helm.sh/hook-weight": "15"
    "helm.sh/hook": pre-install
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
subjects:
- kind: ServiceAccount
  name: validate-single-mesh-account
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: validate-single-mesh-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: Job
metadata:
  name: validate-single-mesh
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook-weight": "20"
    "helm.sh/hook": pre-install
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeededd
spec:
  ttlSecondsAfterFinished: 0
  backoffLimit: 5
  template:
    metadata:
      labels:
        app: validate-single-mesh
    spec:
      serviceAccountName: validate-single-mesh-account
      automountServiceAccountToken: true
      restartPolicy: Never
      terminationGracePeriodSeconds: 0
      containers:
        - name: validate-single-mesh
          image: {{ .Values.kubectl.image.name }}:{{ .Values.kubectl.image.tag }}
          imagePullPolicy: IfNotPresent
          env: 
            - name: enforcesinglemesh
              value: {{ .Values.osm.OpenServiceMesh.enforceSingleMesh | quote }}
            - name: validatenamespaces
              value: {{ .Values.OpenServiceMesh.validateNamespaces }}
          command: 
            - "/bin/sh"
            - "-ec"
            - |
              if [ "${enforcesinglemesh}" = "true" ]; then
                osm_namespaces=$(kubectl get deployments -l app=osm-controller -A -o=jsonpath={..metadata.namespace})
                for namespace in $osm_namespaces
                do
                  for validateNamespace in ${validatenamespaces} 
                  do
                    if [ "$namespace" = "$validateNamespace" ]; then
                      echo "osm already exists in namespace $namespace. osm-arc enforces single-mesh cluster."
                      exit 1
                    fi 
                  done
                done
              fi
