parameters: 
  - name: releaseTag
    type: boolean
    default: false

steps: 
  - bash: |
      az login --identity > /dev/null 2>&1
      az acr login --name $(REGISTRY_NAME) > /dev/null 2>&1
    displayName: Login to acr
    env: 
      REGISTRY_NAME: $(REGISTRY_NAME)
  - script: |
      cp $(image.dir)/$(chart.name)-*.tgz .
      FILENAME=$(ls $(chart.name)-*.tgz)
      TRIM=${FILENAME##$(chart.name)-}
      echo "##vso[task.setvariable variable=CHART_VERSION]${TRIM%%.tgz}"
      echo ${CHART_VERSION}
    displayName: Get osm-arc chart version from packaged chart file
  - script: |
      echo "##vso[task.setvariable variable=UNIQUE_TAG]$(git rev-parse --short HEAD)"
      echo ${UNIQUE_TAG}
    displayName: Create Unique Tag
  - script: |
      echo ${{ lower(parameters.releaseTag) }}
      if [[ ${{ lower(parameters.releaseTag) }} == "true" ]]; then
        # Add "-release" for chart created by release job.  
        echo "##vso[task.setvariable variable=IMAGE_TAG]${CHART_VERSION}-${UNIQUE_TAG}-release"
      else
        # Add "-pr" for chart created by pr job.  
        echo "##vso[task.setvariable variable=IMAGE_TAG]${CHART_VERSION}-${UNIQUE_TAG}-pr"
      fi
      echo ${IMAGE_TAG}
    displayName: Create image tag 
  - bash: |
      if [[ -n "${IMAGE_TAG}" ]]; then
        echo 'pushing chart'
        oras push $(REPOSITORY_NAME):${IMAGE_TAG} ./$(chart.name)-${CHART_VERSION}.tgz:application/tar+gzip --debug
      else 
        echo "Helm chart was not published to staging ACR because $IMAGE_TAG was not set by the pipeline" && exit 1
      fi
    displayName: Push helm chart to staging ACR
    env:
      HELM_EXPERIMENTAL_OCI: 1
      REPOSITORY_NAME: $(REPOSITORY_NAME)
  - task: PublishBuildArtifacts@1
    displayName: Publish artifacts
    inputs:
      artifactName: $(image.artifact.name)
      pathToPublish: $(image.dir)
