parameters: 
  - name: aksAddonRun
    type: boolean
    default: false

steps:
  - bash: |
      sleep 180
    displayName: "Add delay before running upstream e2es"
  - bash: |
      if [[ "${{ parameters.aksAddonRun }}" == "True" ]]; then
        git checkout ${UPSTREAM_E2E_BRANCH}
      else
        trimmed_tag=$(echo $(CHART_VERSION) | cut -d'-' -f 1)
        release_branch=release-v$(echo $trimmed_tag | cut -d'.' -f -2)
        git checkout $release_branch
      fi

      if [[ "$(CHART_VERSION)" == *"-"* && "$(CHART_VERSION)" != *"rc"* ]]; then
        export CTR_TAG=v$trimmed_tag
      else
        export CTR_TAG=v$(CHART_VERSION)
      fi

      make build-osm
      # Skipping ingressbackend e2e test until nginx-AKS issue is resolved. 
      go test ./tests/e2e -test.v -ginkgo.v -ginkgo.progress -ginkgo.skip="\bIngress using IngressBackend API\b" -ginkgo.skip="\bTest reinstalling OSM in the same namespace with the same mesh name\b" -ginkgo.skip="\bTest HTTP traffic from 1 pod client -> 1 pod server before and after osm-controller restart\b" -test.timeout 120m -installType=NoInstall -OsmNamespace=$(release.namespace)
    displayName: "Run upstream e2e tests"
    env:
      CTR_REGISTRY: $(UPSTREAM_DOCKER_REGISTRY)
    workingDirectory: $(System.DefaultWorkingDirectory)/osm
